@startuml
title Outbound messages received via REST and sent into PEPPOL
partition ringo-sever {
    (*) --> "Receive http POST request" as RR
    --> "Save data in DBMS
            and filesystem"
    if "use EventQeueues" then
        --> [yes] "Post message to
            outbound queue"
        --> === S1 ===
        --> "Return REST response"
        --> RR
    else
        --> "Return REST response"  as RRR
        --> RR
    end if        
}

skinparam {
    activityShape<<x>> octagon
}
partition outbound-pipeline {
    === S1 === -->   "Retrieve next\nmessage metadata\nfrom queue" AS QR
    --> "Load associated payload\nand validate" <<x>>
    if "valid" then
        --> [yes] "Update DBMS with results"
        --> Send into PEPPOL network
        --> Persist transmission\nevidence
        --> QR
    else
        --> [no] "Update DBMS\nand log error"
        --> QR
    end if

}

partition oxalis-inbound {
  (*) --> "Receive message from PEPPOL" as RP
  --> Persist message, metadata, evidence etc (pluggable) : <<x>>
  if "useEventQeueue" then
    --> [yes] Post message to inbound queue
    --> === S2 ===
    --> "Return AS2 MDN" as RMDN
else
    --> [no] RMDN
end if
  --> RP
}
partition inbound-pipeline {
    === S2 === --> "Next message" as NM
    --> Load payload
    --> Validate
    if "valid" then
        --> [yes] "Update DBMS"
        --> Move message to /inbox
        --> NM
    else
        --> [no] "Update DBMS"
        --> Handle error
        --> NM
    end if
}

partition ringo-standalone {
    (*) --> "Read messages from DBMS queue" AS RM
    --> Send messages using SimpleTransmitter
    --> Update database
    --> RM
}

@enduml
